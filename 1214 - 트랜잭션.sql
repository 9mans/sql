/*
    트랜젝션
            데이터베이스의 상태를 변화시키는 하나의 논리적인 기능을 수행하기 위한 작업의 단위이다
            예) 홍길동이 이순신에게 100만원을 이체한다
                    1. 홍길동의 계좌에서 잔액을 100만원 감소시킨다 - UPDATE
                    2. 이순신의 계좌에서 잔액을 100만원 증가시킨다 - UPDATE
                    3. 홍길동의 최근 이체내역에 이순신에게 100만원을 송금한 내용을 추가한다 - INSERT
                    
                    * 논리적인 작업의 단위(그룹, 묶음, 연산들) = 감소 UPDATE + 증가 UPDATE + 추가 INSERT
                    * 논리적인 작업의 단위를 구성하는 모든 SQL 명령이 성공적으로 완료되어야 
                       하나의 작업단위가 완료된 것이고 이 경우에만 데이터베이스에 반영시킨다
                       
    트랜잭션 관련 명령어
            COMMIT
                    논리적인 작업 단위를 구성하는 모든 작업이 성공적으로 완료되었을 때 
                    해당 작업 단위내에서 실행했던 처리 결과를 영구적으로 데이터베이스에 반영시킨다
                    
            ROLLBACK
                    논리적인 작업 단위를 구성하는 작업 중에서 오류가 발생했을 때
                    데이터베이스의 트랜잭션 관리자에게
                    해당 작업 단위내에서 실행했던 처리 결과의 데이터베이스 반영을 취소시킨다
                    
    트랜잭션의 시작과 종료
    
            트랜잭션의 시작
                    - 첫번째 DML 명령문이 실행될 때 새로운 트랜잭션이 시작된다
                    - COMMIT, ROLLBACK 명령을 실행하면 새로운 트랜잭션이 시작된다
                    
            트랜잭션의 종료
                    - COMMIT, ROLLBACK 명령을 실행하면 기존 트랜잭션이 종료된다
                    - DBMS에 시스템 장애가 발생할 때 AUTO-ROLLBACK이 실행되면서 트랜잭션이 종료된다
*/

--------------------------------------------------------------트랜잭션 1이 시작됨
UPDATE ACCOUNTS
SET
        DEPOSIT = DEPOSIT - 1000000
WHERE
        NO = 10;                                                                    -- 트랜잭션 1의 연산인다
        
UPDATE ACCOUNTS
SET
        DEPOSIT = DEPOSTI + 1000000
WHERE                                                                              -- 트랜잭션 1의 연산이다
        NO = 20;
        
INSERT INTO HISTORISES
VALUES (10, 20, 1000000, SYSDATE);                                -- 트랜잭션 1의 연산이다

COMMIT;                                                                           -- 트랜잭션1의 모든 연산이 오류없이 실행되었기 때문에
                                                                                         -- 트랜잭션 관리자에게 트랜잭션 1의 처리결과를 영구적으로 데이터베이스에 반영시키도록 한다
--------------------------------------------------------------트랜잭션1이 종료됨
--------------------------------------------------------------트랜잭션2가 실행됨
UPDATE ACCOUNTS
SET
        DEPOSIT = DEPOST - 50000
WHERE 
        NO = 70;
        
UPDATE ACCOUNTS
SET
        DEPOSIT = DEPOST + 50000
WHERE 
        NO = 120;

INSERT INTO HISTORIES
VALUES (70, 120, 50000);


ROLLBACK;                                                                        -- 트랜잭션 INSERT작업중 오류가 발생했다 트랜잭션2의 처리결과를 모두 취소시킨다
-------------------------------------------------------------트랜잭션 2종료
